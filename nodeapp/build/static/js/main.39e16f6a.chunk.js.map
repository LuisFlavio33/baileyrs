{"version":3,"sources":["module/ZDG.js","App.js","serviceWorker.js","index.js"],"names":["ZDG","props","state","campInstancias","campInstancia","campResult","campResult2","style","marginRight","class","onClick","ZDGList","ZDGRestore","name","cols","rows","value","this","onChange","setState","target","required","placeholder","marginTop","marginBottom","type","replace","ZDGInit","ZDGQr","ZDGQrBase","ZDGInfo","ZDGLogout","ZDGDel","src","img","alt","campZDG","ZDGOn","ZDGPic","ZDGStatus","imgPic","href","width","height","config","method","url","baseUrl","headers","axios","then","response","dataZDG","JSON","stringify","data","catch","error","console","log","alert","newPageUrl","window","open","qrcode","message","key","instance_data","phone_connected","instance_key","user","id","includes","status","React","Component","App","className","color","fontWeight","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39e16f6a.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'sweetalert2/src/sweetalert2.scss'\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = process.env.REACT_APP_BACKEND_URL;\r\n\r\nclass ZDG extends React.Component  {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      campInstancias:[],\r\n      campInstancia: \"\",\r\n      campResult: \"\",\r\n      campResult2: \"\"\r\n    }\r\n  }\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div>\r\n        <h2>ZDG BAILEYS - MULTISESSÃO</h2>\r\n        <hr></hr>\r\n        <button style={{ marginRight: 5 }} class=\"btn btn-primary\" onClick={()=>this.ZDGList()}>Listar Sessões</button>\r\n        <button class=\"btn btn-primary\" onClick={()=>this.ZDGRestore()}>Restaurar todas</button>\r\n        <textarea \r\n          class=\"form-control\"\r\n\t\t\t\t\tname=\"campPergunta\" \r\n\t\t\t\t\tcols=\"40\" \r\n\t\t\t\t\trows=\"3\"\r\n\t\t\t\t\tvalue={this.state.campInstancias} \r\n\t\t\t\t\tonChange={(value)=> this.setState({campInstancias:value.target.value})}\r\n\t\t\t\t\trequired=\"required\"\r\n\t\t\t\t\tplaceholder=\"Sessão #1&#13;&#10;Sessão #2&#13;&#10;...\"\r\n          style={{ marginTop: 15, marginBottom: 30 }}\r\n\t\t\t\t></textarea>\r\n        <h3>Controle da Sessão</h3>\r\n        <input style={{ marginBottom: 15 }} type=\"text\" class=\"form-control\" placeholder=\"Sessão (somente letras e numeros)\" value={this.state.campInstancia} onChange={(value)=> this.setState({campInstancia:value.target.value.replace(/\\W/g, \"\")})}/>\r\n        <button style={{ marginRight: 5 }} class=\"btn btn-success\" onClick={()=>this.ZDGInit()}>Iniciar</button>\r\n        <button style={{ marginRight: 5 }} class=\"btn btn-primary\" onClick={()=>this.ZDGQr()}>QrCode na Web</button>\r\n        <button style={{ marginRight: 5 }} class=\"btn btn-primary\" onClick={()=>this.ZDGQrBase()}>QrCode Base64</button>\r\n        <button style={{ marginRight: 5 }} class=\"btn btn-secondary\" onClick={()=>this.ZDGInfo()}>Informações</button>\r\n        <button style={{ marginRight: 5 }} class=\"btn btn-danger\" onClick={()=>this.ZDGLogout()}>Logout</button>\r\n        <button class=\"btn btn-danger\" onClick={()=>this.ZDGDel()}>Deletar</button>\r\n        <p><br /></p>\r\n        <p>{this.state.campResult}</p>\r\n        <img src={this.state.img} alt=\"\" />\r\n        <hr></hr>\r\n        <h3>Consulta</h3>\r\n        <input style={{ marginBottom: 15 }} type=\"text\" class=\"form-control\" value={this.state.campZDG} onChange={(value)=> this.setState({campZDG:value.target.value.replace(/\\W/g, \"\")})}/>\r\n        <button style={{ marginRight: 5 }} class=\"btn btn-success\" onClick={()=>this.ZDGOn()}>WhatsApp ON</button>\r\n        <button style={{ marginRight: 5 }} class=\"btn btn-primary\" onClick={()=>this.ZDGPic()}>Imagem de Perfil</button>\r\n        <button style={{ marginRight: 5 }} class=\"btn btn-danger\" onClick={()=>this.ZDGStatus()}>Status</button>\r\n        <p><br /></p>\r\n        <p>{this.state.campResult2}</p>\r\n        <img src={this.state.imgPic} alt=\"\"/>\r\n        <p><br /></p>\r\n        <hr></hr>\r\n        <p><a href=\"https://zapdasgalaxias.com.br\"><img src=\"./logo192.png\" alt=\"\" style={{width: 50, height: 50}}/></a> © ZAP das Galáxias</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  ZDGList(){\r\n    const config = {\r\n      method: 'get',\r\n      url: baseUrl + '/instance/list',\r\n      headers: { },\r\n    };\r\n    axios(config)\r\n    .then((response) => {\r\n      const dataZDG = JSON.stringify(response.data.data).replace(/,/g,\"\\nSessão: \").replace(\"[\",\"Sessão: \")\r\n      this.setState({ campInstancias: dataZDG.replace(/]|\"/g, \"\")})\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      alert('© BOT-ZDG - Sem tokens ativos.')\r\n    });\r\n  }\r\n\r\n  ZDGRestore(){\r\n    const config = {\r\n      method: 'get',\r\n      url: 'http://localhost:3333/instance/restore',\r\n      headers: { },\r\n    };\r\n    axios(config)\r\n    .then((response) => {\r\n      const dataZDG = JSON.stringify(response.data.data).replace(/,/g,\"\\nSessão restaurada: \").replace(\"[\",\"Sessão restaurada: \")\r\n      this.setState({ campInstancias: dataZDG.replace(/]|\"/g, \"\")})\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      alert('© BOT-ZDG - Sem tokens ativos.')\r\n    });\r\n  }\r\n\r\n  ZDGQr(){\r\n    const newPageUrl = 'http://localhost:3333/instance/qr?key='+ this.state.campInstancia\r\n    window.open(newPageUrl, \"_blank\")\r\n  }\r\n\r\n  ZDGQrBase(){\r\n    const config = {\r\n      method: 'get',\r\n      url: 'http://localhost:3333/instance/qrbase64?key=' + this.state.campInstancia,\r\n      headers: { },\r\n    };\r\n    axios(config)\r\n    .then((response) => {\r\n      this.setState({ img: response.data.qrcode });\r\n      //console.log(response)\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      alert('© BOT-ZDG - Token já removido ou não existe.')\r\n    });\r\n  }\r\n\r\n  ZDGInit(){\r\n    const config = {\r\n      method: 'get',\r\n      url: 'http://localhost:3333/instance/init?key=' + this.state.campInstancia,\r\n      headers: { },\r\n    };\r\n    axios(config)\r\n    .then((response) => {\r\n      //alert('Status: ' + JSON.stringify(response.data.message).replace(/\"/g, \"\") + '. Token: ' + JSON.stringify(response.data.key).replace(/\"/g, \"\"))\r\n      //console.log(response)\r\n      this.setState({ campResult: 'Status: ' + JSON.stringify(response.data.message).replace(/\"/g, \"\") + '. Token: ' + JSON.stringify(response.data.key).replace(/\"/g, \"\")})\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      alert('© BOT-ZDG - Token não inicializado.')\r\n    });\r\n  }\r\n\r\n  ZDGInfo(){\r\n    const config = {\r\n      method: 'get',\r\n      url: 'http://localhost:3333/instance/info?key=' + this.state.campInstancia,\r\n      headers: { },\r\n    };\r\n    axios(config)\r\n    .then((response) => {\r\n      //alert(\"Status: \" + JSON.stringify(response.data.instance_data.phone_connected) + \". Token: \" + JSON.stringify(response.data.instance_data.instance_key).replace(/\\W/g, \"\") + \". Conta conectada: \" + JSON.stringify(response.data.instance_data.user.id).replace(/\\D/g, \"\"))\r\n      //console.log(response)\r\n      this.setState({ campResult: \"Status: \" + JSON.stringify(response.data.instance_data.phone_connected) + \". Token: \" + JSON.stringify(response.data.instance_data.instance_key).replace(/\\W/g, \"\") + \". Conta conectada: \" + JSON.stringify(response.data.instance_data.user.id).replace(/\\D/g, \"\")})\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      alert('© BOT-ZDG - Token já removido ou não existe.')\r\n    });\r\n  }\r\n\r\n  ZDGDel(){\r\n    const config = {\r\n      method: 'delete',\r\n      url: 'http://localhost:3333/instance/delete?key=' + this.state.campInstancia,\r\n      headers: { },\r\n    };\r\n    axios(config)\r\n    .then((response) => {\r\n      alert(JSON.stringify(response.data.message))\r\n      //console.log(response)\r\n      this.setState({ campInstancias: JSON.stringify(response.data.message)})\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      alert('© BOT-ZDG - Token já removido ou não existe.')\r\n    });\r\n  }\r\n\r\n  ZDGLogout(){\r\n    const config = {\r\n      method: 'delete',\r\n      url: 'http://localhost:3333/instance/logout?key=' + this.state.campInstancia,\r\n      headers: { },\r\n    };\r\n    axios(config)\r\n    .then((response) => {\r\n      alert(JSON.stringify(response.data.message))\r\n      //console.log(response)\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      alert('© BOT-ZDG - Token já removido ou não existe.')\r\n    });\r\n  }\r\n\r\n  ZDGOn(){\r\n    const config = {\r\n      method: 'get',\r\n      url: 'http://localhost:3333/misc/onwhatsapp?key=' + this.state.campInstancia + '&id=' + this.state.campZDG,\r\n      headers: { },\r\n    };\r\n    axios(config)\r\n    .then((response) => {\r\n      console.log(JSON.stringify(response.data.data))\r\n      //alert(JSON.stringify(response.data.data))\r\n      this.setState({ campResult2: 'WhatsAppON: ' + JSON.stringify(response.data.data)})\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      if (JSON.stringify(error).includes('403')){\r\n        alert('© BOT-ZDG - Token inativo ou não existe.')\r\n      }\r\n      else if (JSON.stringify(error).includes('500')){\r\n        alert('© BOT-ZDG - Número inexistente.')\r\n      }\r\n      else{\r\n        alert('© BOT-ZDG - Número inexistente ou token inativo.')\r\n      }\r\n    });\r\n  }\r\n\r\n  ZDGPic(){\r\n    const config = {\r\n      method: 'get',\r\n      url: 'http://localhost:3333/misc/downProfile?key=' + this.state.campInstancia + '&id=' + this.state.campZDG,\r\n      headers: { },\r\n    };\r\n    axios(config)\r\n    .then((response) => {\r\n      //console.log(JSON.stringify(response.data.data))\r\n      this.setState({ imgPic: response.data.data });\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      if (JSON.stringify(error).includes('403')){\r\n        alert('© BOT-ZDG - Token inativo ou não existe.')\r\n      }\r\n      else if (JSON.stringify(error).includes('500')){\r\n        alert('© BOT-ZDG - Número inexistente.')\r\n      }\r\n      else{\r\n        alert('© BOT-ZDG - Número inexistente ou token inativo.')\r\n      }\r\n    });\r\n  }\r\n\r\n  ZDGStatus(){\r\n    const config = {\r\n      method: 'get',\r\n      url: 'http://localhost:3333/misc/getStatus?key=' + this.state.campInstancia + '&id=' + this.state.campZDG,\r\n      headers: { },\r\n    };\r\n    axios(config)\r\n    .then((response) => {\r\n      //console.log(JSON.stringify(response.data.data.status))\r\n      this.setState({ campResult2: 'Status: ' + JSON.stringify(response.data.data.status)})\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n      if (JSON.stringify(error).includes('403')){\r\n        alert('© BOT-ZDG - Token inativo ou não existe.')\r\n      }\r\n      else if (JSON.stringify(error).includes('500')){\r\n        alert('© BOT-ZDG - Número inexistente.')\r\n      }\r\n      else{\r\n        alert('© BOT-ZDG - Número inexistente ou token inativo.')\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default ZDG;","import React from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport ZDG from './module/ZDG';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <a class=\"navbar-brand\" href=\"https://zapdasgalaxias.com.br\" style={{color:'orange',fontWeight:'bold'}}>Comunidade ZDG</a>\r\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n              <li class=\"nav-item active\">\r\n                <Link class=\"nav-link\" to=\"/\"> ZDG Baileys </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <div class=\"container py-4\">\r\n          <div class=\"row\">\r\n            <Route path=\"/\" exact component={ZDG} />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}